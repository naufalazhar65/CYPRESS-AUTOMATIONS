{
  "stats": {
    "suites": 9,
    "tests": 37,
    "passes": 32,
    "pending": 0,
    "failures": 4,
    "testsRegistered": 37,
    "passPercent": 86.48648648648648,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true,
    "start": "2023-11-19T17:14:27.894Z",
    "end": "2023-11-19T17:16:40.673Z",
    "duration": 132779
  },
  "results": [
    {
      "uuid": "232ff00c-677c-4cfb-96cc-57f509ff515c",
      "title": "",
      "fullFile": "cypress/e2e/3-demo/booking_app.cy.js",
      "file": "cypress/e2e/3-demo/booking_app.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3cd3bd65-5dba-4fd6-8c72-9df33917416f",
          "title": "Booking App",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "logs in, books an appointment, and verifies confirmation",
              "fullTitle": "Booking App logs in, books an appointment, and verifies confirmation",
              "timedOut": null,
              "duration": 9237,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Login\nconst username = 'John Doe';\nconst password = 'ThisIsNotAPassword';\ncy.get('#txt-username').type(username).should('have.value', username);\ncy.get('#txt-password').type(password).should('have.value', password);\n// Submit login form\ncy.get('.form-horizontal').submit();\n// Verify HTTP response code after login\ncy.request({\n  url: 'https://katalon-demo-cura.herokuapp.com/profile.php#login',\n  // update with the actual URL\n  method: 'POST',\n  form: true,\n  body: {\n    username: username,\n    password: password\n  }\n}).should(response => {\n  expect(response.status).to.eq(200);\n});\ncy.wait(1000);\n// Pilih fasilitas\nconst selectedOption = 'Seoul CURA Healthcare Center';\ncy.get('#combo_facility').should('be.visible').select(selectedOption).should('have.value', selectedOption);\n// Checkbox\ncy.get('#chk_hospotal_readmission').should('not.be.checked').check().should('be.checked');\n// Tanggal kunjungan\nconst selectedDate = '1999-02-12';\ncy.get('#txt_visit_date').type(selectedDate).should('have.value', selectedDate);\n// Pilih program\ncy.get('.col-sm-4 [type=\"radio\"]').check('None', {\n  force: true\n}).should('be.checked');\n// Komentar\nconst comment = 'hallo world';\ncy.get('#txt_comment').type(comment).should('have.value', comment);\n// Booking appointment\ncy.get('.form-horizontal').submit();\n// Verifikasi halaman konfirmasi\ncy.get('#summary > .container > .row').should('be.visible');\ncy.get('.col-xs-12.text-center h2').should('have.text', 'Appointment Confirmation');\ncy.get('.col-xs-12.text-center p.lead').should('have.text', 'Please be informed that your appointment has been booked as following:');\ncy.get('.col-xs-12.text-center hr.small').should('be.visible');\n// Klik tombol di halaman konfirmasi\ncy.get('.text-center').find('.btn').click();\n// Verifikasi kembali halaman formulir setelah mengklik tombol\ncy.get('.form-horizontal').should('be.visible');",
              "err": {},
              "uuid": "83d57520-d230-4f24-8755-3e4a67918db6",
              "parentUUID": "3cd3bd65-5dba-4fd6-8c72-9df33917416f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83d57520-d230-4f24-8755-3e4a67918db6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9237,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2431b029-82d0-4115-a4dd-b8f3dcb3041b",
      "title": "",
      "fullFile": "cypress/e2e/5-orange_hrm/addUser.cy.js",
      "file": "cypress/e2e/5-orange_hrm/addUser.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "20df5b1d-d42c-4062-b269-c0211d412c01",
          "title": "Dashboard Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify User can add user",
              "fullTitle": "Dashboard Page Verify User can add user",
              "timedOut": null,
              "duration": 13866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the user creation page\ncy.visit('https://opensource-demo.orangehrmlive.com/web/index.php/admin/saveSystemUser');\ncy.url().should('include', '/web/index.php/admin/saveSystemUser');\n// Select user role\ncy.get(':nth-child(1) > .oxd-input-group > :nth-child(2) > .oxd-select-wrapper > .oxd-select-text > .oxd-select-text-input').click();\ncy.get('.oxd-select-dropdown > :nth-child(2) > span').click();\ncy.get(':nth-child(1) > .oxd-input-group > :nth-child(2) > .oxd-select-wrapper > .oxd-select-text > .oxd-select-text-input').should('have.text', 'Admin');\n// Select status\ncy.get(':nth-child(3) > .oxd-input-group > :nth-child(2) > .oxd-select-wrapper > .oxd-select-text > .oxd-select-text-input').click();\ncy.get('.oxd-select-dropdown > :nth-child(2) > span').click();\ncy.get(':nth-child(3) > .oxd-input-group > :nth-child(2) > .oxd-select-wrapper > .oxd-select-text > .oxd-select-text-input').should('have.text', 'Enabled');\n// Input username\ncy.get(':nth-child(4) > .oxd-input-group').type('naufalazhar65');\n// Select Employee Name (assuming it's an autocomplete input)\ncy.get('.oxd-autocomplete-text-input > input').type('a');\n// Input password\ncy.get('.user-password-cell > .oxd-input-group > :nth-child(2) > .oxd-input').type('Naufalazhar354');\ncy.get(':nth-child(2) > .oxd-input-group > :nth-child(2) > .oxd-input').type('Naufalazhar354');\n// Click save button\ncy.get('.oxd-button--secondary').should('contain', 'Save').click();",
              "err": {},
              "uuid": "3731b1ad-a151-425c-8d55-41f242eca136",
              "parentUUID": "20df5b1d-d42c-4062-b269-c0211d412c01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3731b1ad-a151-425c-8d55-41f242eca136"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13866,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3c07f2d9-b451-46e0-972f-6ad6484b71a7",
      "title": "",
      "fullFile": "cypress/e2e/5-orange_hrm/dasboard.cy.js",
      "file": "cypress/e2e/5-orange_hrm/dasboard.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5ae01485-2b54-4bba-bbb0-3b15bfa70b08",
          "title": "Dashboard Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify all widgets on the dashboard are displayed",
              "fullTitle": "Dashboard Page Verify all widgets on the dashboard are displayed",
              "timedOut": null,
              "duration": 6737,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Time at Work widget\ncy.get('.orangehrm-dashboard-grid > :nth-child(1)').should('exist').find('.oxd-sheet').should('be.visible').and('have.text', 'Time at Work');\n// My Actions widget (uncomment if needed)\n// cy.get(':nth-child(2) > .oxd-sheet').should('be.visible');\n// Quick Launch widget\ncy.get(':nth-child(3) > .oxd-sheet').should('be.visible').and('have.text', 'Quick Launch');\n// Buzz Latest Posts widget\ncy.get(':nth-child(4) > .oxd-sheet').should('be.visible').and('have.text', 'Buzz Latest Posts');\n// Employees on Leave Today widget\ncy.get(':nth-child(5) > .oxd-sheet').should('be.visible').and('have.text', 'Employees on Leave Today');\n// Employee Distribution by Sub Unit widget\ncy.get(':nth-child(6) > .oxd-sheet').should('be.visible').and('have.text', 'Employee Distribution by Sub Unit');\n// Employee Distribution by Location widget\ncy.get(':nth-child(7) > .oxd-sheet').should('be.visible').and('have.text', 'Employee Distribution by Location');",
              "err": {},
              "uuid": "1385947b-9f99-469a-a3e6-f175e569a6fd",
              "parentUUID": "5ae01485-2b54-4bba-bbb0-3b15bfa70b08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1385947b-9f99-469a-a3e6-f175e569a6fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ea233a2a-609c-42d9-b5b0-1b70471addb4",
      "title": "",
      "fullFile": "cypress/e2e/5-orange_hrm/forgotPasswordTest.cy.js",
      "file": "cypress/e2e/5-orange_hrm/forgotPasswordTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c4ff809-f0f7-412c-99fc-3e3a476ba126",
          "title": "Forgot Password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User can reset a password and receive an email",
              "fullTitle": "Forgot Password User can reset a password and receive an email",
              "timedOut": null,
              "duration": 12271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the \"Forgot Password\" link\ncy.get('.orangehrm-login-forgot > .oxd-text').click();\n// Assertion: Check if the URL includes the expected path\ncy.url().should('include', '/web/index.php/auth/requestPasswordResetCode');\n// Type username for password reset\ncy.get('.oxd-input').type('Admin');\n// Click on the Reset passoword button\ncy.get('.oxd-button--secondary').click();\n// Assertion: Check if the card container exists after password reset request\ncy.get('.orangehrm-card-container').should('exist');\n// Assertion: Check if the success message is displayed\ncy.get('.oxd-text--h6').should('have.text', 'Reset Password link sent successfully');",
              "err": {},
              "uuid": "3aac0ee9-8d73-46cc-8ab2-673bd2dd8a4a",
              "parentUUID": "6c4ff809-f0f7-412c-99fc-3e3a476ba126",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3aac0ee9-8d73-46cc-8ab2-673bd2dd8a4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12271,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e2ff18a4-bcea-4d5b-a2bb-e0f37baf8386",
      "title": "",
      "fullFile": "cypress/e2e/5-orange_hrm/loginTest.cy.js",
      "file": "cypress/e2e/5-orange_hrm/loginTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f01454e3-85d4-43bc-baf0-31673166ae25",
          "title": "Login Functional",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "logs in with valid credentials",
              "fullTitle": "Login Functional logs in with valid credentials",
              "timedOut": null,
              "duration": 10207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.orangehrm-login-slot').should('exist');\n// Type valid username and password\ncy.get(':nth-child(2) > .oxd-input-group > :nth-child(2) > .oxd-input').type(username);\ncy.get(':nth-child(3) > .oxd-input-group > :nth-child(2) > .oxd-input').type(validPassword);\n// Click login button\ncy.get('.oxd-button').click();\n// Assertion: Check if the layout context exists after login\ncy.get('.oxd-layout-context').should('exist');",
              "err": {
                "message": "CypressError: Timed out after waiting `10000ms` for your remote page to load.\n\nYour page did not fire its `load` event within `10000ms`.\n\nYou can try increasing the `pageLoadTimeout` value in `cypress.config.js` to wait longer.\n\nBrowsers will not fire the `load` event until all stylesheets and scripts are done downloading.\n\nWhen this `load` event occurs, Cypress will continue running commands.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Functional`",
                "estack": "CypressError: Timed out after waiting `10000ms` for your remote page to load.\n\nYour page did not fire its `load` event within `10000ms`.\n\nYou can try increasing the `pageLoadTimeout` value in `cypress.config.js` to wait longer.\n\nBrowsers will not fire the `load` event until all stylesheets and scripts are done downloading.\n\nWhen this `load` event occurs, Cypress will continue running commands.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Functional`\n    at timedOutWaitingForPageLoad (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:130376:64)\n    at <unknown> (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:131364:16)\n    at tryCatcher (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1807:23)\n    at <unknown> (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:4186:41)\n    at tryCatcher (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress_test/./cypress/e2e/5-orange_hrm/loginTest.cy.js:9:11)",
                "diff": null
              },
              "uuid": "7d2e4cb8-0c00-4400-afa9-c732d785e530",
              "parentUUID": "f01454e3-85d4-43bc-baf0-31673166ae25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fails to log in with invalid credentials",
              "fullTitle": "Login Functional fails to log in with invalid credentials",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.orangehrm-login-slot').should('exist');\n// Type invalid username and password\ncy.get(':nth-child(2) > .oxd-input-group > :nth-child(2) > .oxd-input').type(username);\ncy.get(':nth-child(3) > .oxd-input-group > :nth-child(2) > .oxd-input').type(invalidPassword);\n// Click login button\ncy.get('.oxd-button').click();\n// Assertion: Check if the alert appears after unsuccessful login\ncy.get('.oxd-alert').should('exist');",
              "err": {},
              "uuid": "3a752db3-b2fb-4dac-a2b8-54e5653f6528",
              "parentUUID": "f01454e3-85d4-43bc-baf0-31673166ae25",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7d2e4cb8-0c00-4400-afa9-c732d785e530"
          ],
          "pending": [],
          "skipped": [
            "3a752db3-b2fb-4dac-a2b8-54e5653f6528"
          ],
          "duration": 10207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "134cb47d-0334-4a28-b2ba-026d104cb30d",
          "title": "Forgot Password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User can reset a password and receive an email",
              "fullTitle": "Forgot Password User can reset a password and receive an email",
              "timedOut": null,
              "duration": 8698,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the \"Forgot Password\" link\ncy.get('.orangehrm-login-forgot > .oxd-text').click();\n// Assertion: Check if the URL includes the expected path\ncy.url().should('include', '/web/index.php/auth/requestPasswordResetCode');\n// Type username for password reset\ncy.get('.oxd-input').type('Admin');\n// Click on the Reset passoword button\ncy.get('.oxd-button--secondary').click();\n// Assertion: Check if the card container exists after password reset request\ncy.get('.orangehrm-card-container').should('exist');\n// Assertion: Check if the success message is displayed\ncy.get('.oxd-text--h6').should('have.text', 'Reset Password link sent successfully');",
              "err": {},
              "uuid": "135ecd05-4562-49c6-9963-421884b8b87a",
              "parentUUID": "134cb47d-0334-4a28-b2ba-026d104cb30d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "135ecd05-4562-49c6-9963-421884b8b87a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8698,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6bac4147-2670-46ed-aabe-89a500cec792",
      "title": "",
      "fullFile": "cypress/e2e/5-orange_hrm/searchBar.cy.js",
      "file": "cypress/e2e/5-orange_hrm/searchBar.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c7ce668-f23e-47ae-b68c-779683909759",
          "title": "Dashboard Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify search bar is working",
              "fullTitle": "Dashboard Page Verify search bar is working",
              "timedOut": null,
              "duration": 17924,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Type into the search bar and check the input value\ncy.get('.oxd-input').type('Admin').should('have.value', 'Admin');\n// Click on a main menu item\ncy.get('.oxd-main-menu-item > .oxd-text').click();\n// Assertion: Check if the top bar header breadcrumb module is visible and has the expected text\ncy.get('.oxd-topbar-header-breadcrumb-module').should('be.visible').and('have.text', 'Admin');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.oxd-topbar-header-breadcrumb-module`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.oxd-topbar-header-breadcrumb-module`, but never found it.\n    at Context.eval (webpack://cypress_test/./cypress/e2e/5-orange_hrm/searchBar.cy.js:33:13)",
                "diff": null
              },
              "uuid": "66dccabb-7fb9-4332-a52d-6e7c7eae620f",
              "parentUUID": "5c7ce668-f23e-47ae-b68c-779683909759",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "66dccabb-7fb9-4332-a52d-6e7c7eae620f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17924,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b9762ffa-dc61-44d1-9472-8ff04996c7be",
      "title": "",
      "fullFile": "cypress/e2e/4-api_testing/api_test.cy.js",
      "file": "cypress/e2e/4-api_testing/api_test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8510ab32-191f-4eb0-aad5-6a8d2b7b0e05",
          "title": "API Testing with Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should retrieve a list of users",
              "fullTitle": "API Testing with Cypress should retrieve a list of users",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://reqres.in/api/users?page=1').then(response => {\n  // Verifikasi bahwa responsenya memiliki status code 200\n  expect(response.status).to.eq(200);\n  // Verifikasi bahwa 'data' ada di dalam respons\n  expect(response.body).to.have.property('data');\n  // Verifikasi bahwa 'data' berupa array\n  expect(response.body.data).to.be.an('array');\n  // Verifikasi bahwa setidaknya ada satu pengguna dalam array\n  expect(response.body.data).to.have.length.greaterThan(0);\n  // Outputkan daftar pengguna dalam konsol\n  cy.log('List of Users:', response.body.data);\n});",
              "err": {},
              "uuid": "5c5f3895-ca5d-4273-8ce7-1901b5dd41cf",
              "parentUUID": "8510ab32-191f-4eb0-aad5-6a8d2b7b0e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new user using POST request",
              "fullTitle": "API Testing with Cypress should create a new user using POST request",
              "timedOut": null,
              "duration": 479,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Data pengguna yang akan dibuat\nconst newUser = {\n  name: 'Naufal Azhar',\n  job: 'Tester'\n};\ncy.request({\n  method: 'POST',\n  url: 'https://reqres.in/api/users',\n  body: newUser\n}).then(response => {\n  // Verifikasi bahwa responsenya memiliki status code 201 (Created)\n  expect(response.status).to.eq(201);\n  // Verifikasi bahwa 'name' dan 'job' yang dikirimkan sesuai dengan yang diterima\n  expect(response.body.name).to.eq(newUser.name);\n  expect(response.body.job).to.eq(newUser.job);\n  // Outputkan informasi pengguna yang baru dibuat dalam konsol\n  cy.log('New User Created:', response.body);\n});",
              "err": {},
              "uuid": "df968a22-5383-4f0a-a483-e2671f3f43f5",
              "parentUUID": "8510ab32-191f-4eb0-aad5-6a8d2b7b0e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user information using PUT request",
              "fullTitle": "API Testing with Cypress should update user information using PUT request",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ID pengguna yang akan diperbarui\nconst userIdToUpdate = 2;\n// Data pengguna yang baru\nconst updatedUserInfo = {\n  name: 'Naufal Azhar',\n  job: 'Dev'\n};\ncy.request({\n  method: 'PUT',\n  url: `https://reqres.in/api/users/${userIdToUpdate}`,\n  body: updatedUserInfo\n}).then(response => {\n  // Verifikasi bahwa responsenya memiliki status code 200 (OK)\n  expect(response.status).to.eq(200);\n  // Verifikasi bahwa 'name' dan 'job' yang diperbarui sesuai dengan yang diterima\n  expect(response.body.name).to.eq(updatedUserInfo.name);\n  expect(response.body.job).to.eq(updatedUserInfo.job);\n  // Outputkan informasi pengguna yang diperbarui dalam konsol\n  cy.log('User Updated:', response.body);\n});",
              "err": {},
              "uuid": "e8bda2bc-d47c-438b-994b-6ed7899624b3",
              "parentUUID": "8510ab32-191f-4eb0-aad5-6a8d2b7b0e05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a user using DELETE request",
              "fullTitle": "API Testing with Cypress should delete a user using DELETE request",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ID pengguna yang akan dihapus\nconst userIdToDelete = 2;\ncy.request({\n  method: 'DELETE',\n  url: `https://reqres.in/api/users/${userIdToDelete}`\n}).then(response => {\n  // Verifikasi bahwa responsenya memiliki status code 204 (No Content)\n  expect(response.status).to.eq(204);\n  // Outputkan informasi bahwa pengguna telah dihapus dalam konsol\n  cy.log(`User with ID ${userIdToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "2ea7ff32-4ae9-42c1-9aa1-457eb30cedd3",
              "parentUUID": "8510ab32-191f-4eb0-aad5-6a8d2b7b0e05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c5f3895-ca5d-4273-8ce7-1901b5dd41cf",
            "df968a22-5383-4f0a-a483-e2671f3f43f5",
            "e8bda2bc-d47c-438b-994b-6ed7899624b3",
            "2ea7ff32-4ae9-42c1-9aa1-457eb30cedd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1468,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c4bac1f5-d5ac-4e22-b976-e9ae7da921ff",
      "title": "",
      "fullFile": "cypress/e2e/4-api_testing/pet_store.cy.js",
      "file": "cypress/e2e/4-api_testing/pet_store.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8d36a069-9f51-4afd-aee1-e912a8161bc0",
          "title": "Petstore API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should retrieve a list of pets",
              "fullTitle": "Petstore API Testing should retrieve a list of pets",
              "timedOut": null,
              "duration": 1971,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://petstore.swagger.io/v2/pet/findByStatus?status=available').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array').and.not.be.empty;\n  cy.log('List of Available Pets:', response.body);\n});",
              "err": {},
              "uuid": "95e1c82b-6ce9-4401-85b0-05b62f0cf85d",
              "parentUUID": "8d36a069-9f51-4afd-aee1-e912a8161bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a new pet",
              "fullTitle": "Petstore API Testing should add a new pet",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPet = {\n  id: 12345,\n  name: 'CypressPet',\n  category: {\n    id: 1,\n    name: 'Dogs'\n  },\n  photoUrls: ['https://example.com/pet.jpg'],\n  tags: [{\n    id: 1,\n    name: 'tag1'\n  }],\n  status: 'available'\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/pet',\n  body: newPet\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(newPet.id);\n  expect(response.body.name).to.eq(newPet.name);\n  cy.log('New Pet Added:', response.body);\n});",
              "err": {},
              "uuid": "f86ae62c-e300-4bf0-9c0f-c1063fcb872e",
              "parentUUID": "8d36a069-9f51-4afd-aee1-e912a8161bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update a pet's information",
              "fullTitle": "Petstore API Testing should update a pet's information",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const petIdToUpdate = 12345;\nconst updatedPetInfo = {\n  id: petIdToUpdate,\n  name: 'UpdatedCypressPet',\n  status: 'sold'\n};\ncy.request({\n  method: 'PUT',\n  url: `https://petstore.swagger.io/v2/pet`,\n  body: updatedPetInfo\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(updatedPetInfo.id);\n  expect(response.body.name).to.eq(updatedPetInfo.name);\n  expect(response.body.status).to.eq(updatedPetInfo.status);\n  cy.log('Pet Information Updated:', response.body);\n});",
              "err": {},
              "uuid": "a60fcb48-3dd5-40e2-a700-34859a7b49e0",
              "parentUUID": "8d36a069-9f51-4afd-aee1-e912a8161bc0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a pet",
              "fullTitle": "Petstore API Testing should delete a pet",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const petIdToDelete = 12345;\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/pet/${petIdToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`Pet with ID ${petIdToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "a4851322-a9a2-4582-86db-0d21c20a23e8",
              "parentUUID": "8d36a069-9f51-4afd-aee1-e912a8161bc0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95e1c82b-6ce9-4401-85b0-05b62f0cf85d",
            "f86ae62c-e300-4bf0-9c0f-c1063fcb872e",
            "a60fcb48-3dd5-40e2-a700-34859a7b49e0",
            "a4851322-a9a2-4582-86db-0d21c20a23e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2814,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "70134d11-1ceb-4fc6-a9c6-965e76a1112e",
          "title": "Petstore Store API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should place a new order",
              "fullTitle": "Petstore Store API Testing should place a new order",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newOrder = {\n  id: 10,\n  petId: 12345,\n  // Assuming pet with ID 12345 exists\n  quantity: 1,\n  shipDate: '2023-12-01T12:00:00.000Z',\n  status: 'placed',\n  complete: true\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/store/order',\n  body: newOrder\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(newOrder.id);\n  expect(response.body.petId).to.eq(newOrder.petId);\n  expect(response.body.quantity).to.eq(newOrder.quantity);\n  expect(response.body.status).to.eq(newOrder.status);\n  expect(response.body.complete).to.eq(newOrder.complete);\n  cy.log('New Order Placed:', response.body);\n});",
              "err": {},
              "uuid": "7f6e3759-911f-46e5-8ef9-1b5803abdd85",
              "parentUUID": "70134d11-1ceb-4fc6-a9c6-965e76a1112e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve an order by ID",
              "fullTitle": "Petstore Store API Testing should retrieve an order by ID",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orderIdToRetrieve = 10;\ncy.request('GET', `https://petstore.swagger.io/v2/store/order/${orderIdToRetrieve}`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(orderIdToRetrieve);\n  cy.log('Retrieved Order:', response.body);\n});",
              "err": {},
              "uuid": "e4a9928e-db53-40b1-a984-b497a5e631f4",
              "parentUUID": "70134d11-1ceb-4fc6-a9c6-965e76a1112e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete an order by ID",
              "fullTitle": "Petstore Store API Testing should delete an order by ID",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orderIdToDelete = 10;\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/store/order/${orderIdToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`Order with ID ${orderIdToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "68f4e936-4d18-410e-b440-61ade2e0df62",
              "parentUUID": "70134d11-1ceb-4fc6-a9c6-965e76a1112e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f6e3759-911f-46e5-8ef9-1b5803abdd85",
            "e4a9928e-db53-40b1-a984-b497a5e631f4",
            "68f4e936-4d18-410e-b440-61ade2e0df62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb4b00aa-885c-43b0-8d4c-10b9c66d5d11",
          "title": "Petstore User API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new user",
              "fullTitle": "Petstore User API Testing should create a new user",
              "timedOut": null,
              "duration": 471,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  id: 123455,\n  username: 'cypressuser',\n  firstName: 'Cypress',\n  lastName: 'User',\n  email: 'cypressuser@example.com',\n  password: 'cypresspassword',\n  phone: '1234567890',\n  userStatus: 34534\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/user',\n  body: newUser\n}).then(response => {\n  // Log the response to the console for debugging\n  console.log('Response Body:', response.body);\n  // Verify the response status is 200 OK\n  expect(response.status).to.eq(200);\n  // Verify that the response body contains the expected user data\n  expect(response.body.id).to.eq(newUser.id);\n  expect(response.body.username).to.eq(newUser.username);\n  expect(response.body.firstName).to.eq(newUser.firstName);\n  expect(response.body.lastName).to.eq(newUser.lastName);\n  expect(response.body.email).to.eq(newUser.email);\n  expect(response.body.password).to.eq(newUser.password);\n  expect(response.body.phone).to.eq(newUser.phone);\n  expect(response.body.userStatus).to.eq(newUser.userStatus);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 123455",
                "estack": "AssertionError: expected undefined to equal 123455\n    at Context.eval (webpack://cypress_test/./cypress/e2e/4-api_testing/pet_store.cy.js:180:34)",
                "diff": null
              },
              "uuid": "4ad03b4c-3f89-4969-9384-4cb6e32fa260",
              "parentUUID": "bb4b00aa-885c-43b0-8d4c-10b9c66d5d11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve a user by username",
              "fullTitle": "Petstore User API Testing should retrieve a user by username",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToRetrieve = 'cypressuser';\ncy.request('GET', `https://petstore.swagger.io/v2/user/${usernameToRetrieve}`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.username).to.eq(usernameToRetrieve);\n  cy.log('Retrieved User:', response.body);\n});",
              "err": {},
              "uuid": "88c2cd1a-f7ef-49ff-a61e-55943d88adb3",
              "parentUUID": "bb4b00aa-885c-43b0-8d4c-10b9c66d5d11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user information",
              "fullTitle": "Petstore User API Testing should update user information",
              "timedOut": null,
              "duration": 446,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const usernameToUpdate = 'cypressuser';\nconst updatedUserInfo = {\n  id: 11,\n  // Use the correct user ID you want to update\n  username: usernameToUpdate,\n  firstName: 'UpdatedCypress',\n  lastName: 'UpdatedUser',\n  email: 'updatedcypressuser@example.com',\n  password: 'updatedcypresspassword',\n  phone: '9876543210',\n  userStatus: 2\n};\ncy.request({\n  method: 'PUT',\n  url: `https://petstore.swagger.io/v2/user/${usernameToUpdate}`,\n  body: updatedUserInfo\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(updatedUserInfo.id);\n  expect(response.body.username).to.eq(updatedUserInfo.username);\n  expect(response.body.firstName).to.eq(updatedUserInfo.firstName);\n  expect(response.body.lastName).to.eq(updatedUserInfo.lastName);\n  expect(response.body.email).to.eq(updatedUserInfo.email);\n  expect(response.body.phone).to.eq(updatedUserInfo.phone);\n  expect(response.body.userStatus).to.eq(updatedUserInfo.userStatus);\n  cy.log('User Information Updated:', response.body);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 11",
                "estack": "AssertionError: expected undefined to equal 11\n    at Context.eval (webpack://cypress_test/./cypress/e2e/4-api_testing/pet_store.cy.js:228:36)",
                "diff": null
              },
              "uuid": "ec95f062-d66c-4b63-b98c-a85bf88bde6f",
              "parentUUID": "bb4b00aa-885c-43b0-8d4c-10b9c66d5d11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a user by username",
              "fullTitle": "Petstore User API Testing should delete a user by username",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToDelete = 'cypressuser';\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/user/${usernameToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`User with username ${usernameToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "bf1ed120-7941-4cee-a68b-6938593d0b08",
              "parentUUID": "bb4b00aa-885c-43b0-8d4c-10b9c66d5d11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88c2cd1a-f7ef-49ff-a61e-55943d88adb3",
            "bf1ed120-7941-4cee-a68b-6938593d0b08"
          ],
          "failures": [
            "4ad03b4c-3f89-4969-9384-4cb6e32fa260",
            "ec95f062-d66c-4b63-b98c-a85bf88bde6f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1509,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0ef5000f-ac12-49af-a7c5-738b94987d9f",
      "title": "",
      "fullFile": "cypress/e2e/2-doc/actions.cy.js",
      "file": "cypress/e2e/2-doc/actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69392b88-3dff-4d14-b894-033791d7f27f",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 3653,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com')\n// .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}')\n// .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}')\n// Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "d1c1a900-e183-4077-b04e-b1a32f693639",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "fdd4a2db-0a5a-463b-a5a4-9f7205a25bfc",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "b99afe4b-e74c-473f-b294-fff78d7d085b",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "2793c5ce-fb25-45ac-8b7c-2e2ab5e60fc1",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "01007243-f50b-40d2-b220-4779904fe316",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 1815,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "4fcd10fd-cc29-4f60-8f74-ca806d041b36",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "d7d6dd23-2c09-4ea5-b5b1-860b0ef71175",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "89515c42-3719-4782-a114-38398385668b",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "4bc6d2fe-41df-4b74-b869-d208350a9294",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 775,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "7da01596-fdf7-4f4a-bebb-88084f4a9d68",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas'])\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "23dc99dc-c3db-4c72-8c2b-5f230a89836f",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "ae48850e-830f-446f-b0c5-54a9cc55a813",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "6ea8da58-c268-4bab-b2dd-e7b33e715291",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "4aaf0a34-f47a-4adb-8368-b0de134bbb77",
              "parentUUID": "69392b88-3dff-4d14-b894-033791d7f27f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1c1a900-e183-4077-b04e-b1a32f693639",
            "fdd4a2db-0a5a-463b-a5a4-9f7205a25bfc",
            "b99afe4b-e74c-473f-b294-fff78d7d085b",
            "2793c5ce-fb25-45ac-8b7c-2e2ab5e60fc1",
            "01007243-f50b-40d2-b220-4779904fe316",
            "4fcd10fd-cc29-4f60-8f74-ca806d041b36",
            "d7d6dd23-2c09-4ea5-b5b1-860b0ef71175",
            "89515c42-3719-4782-a114-38398385668b",
            "4bc6d2fe-41df-4b74-b869-d208350a9294",
            "7da01596-fdf7-4f4a-bebb-88084f4a9d68",
            "23dc99dc-c3db-4c72-8c2b-5f230a89836f",
            "ae48850e-830f-446f-b0c5-54a9cc55a813",
            "6ea8da58-c268-4bab-b2dd-e7b33e715291",
            "4aaf0a34-f47a-4adb-8368-b0de134bbb77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11869,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/mocha"
      },
      "version": "6.2.0"
    }
  }
}