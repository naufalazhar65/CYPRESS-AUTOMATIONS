{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-19T16:24:11.237Z",
    "end": "2023-11-19T16:24:14.553Z",
    "duration": 3316,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "db2f09ff-a23f-4c19-80c7-25fc92ebde43",
      "title": "",
      "fullFile": "cypress/e2e/4-api_testing/pet_store.cy.js",
      "file": "cypress/e2e/4-api_testing/pet_store.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "should logout the user",
          "fullTitle": "should logout the user",
          "timedOut": null,
          "duration": 1395,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Assuming you have a user already logged in, and you have the necessary authentication tokens\n// Perform the login before attempting to logout\n// Your login code goes here...\n// Now, call the custom Cypress command to logout the user\ncy.logoutUser();",
          "err": {},
          "uuid": "6deeb81a-5cd7-4e7e-820b-3407fe8ececc",
          "parentUUID": "db2f09ff-a23f-4c19-80c7-25fc92ebde43",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [
        {
          "uuid": "9a297868-fef7-4ed8-b01f-709e9151d1bc",
          "title": "Petstore User API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new user",
              "fullTitle": "Petstore User API Testing should create a new user",
              "timedOut": null,
              "duration": 390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  id: 11,\n  username: 'cypressuser',\n  firstName: 'Cypress',\n  lastName: 'User',\n  email: 'cypressuser@example.com',\n  password: 'cypresspassword',\n  phone: '1234567890',\n  userStatus: 1\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/user',\n  body: newUser\n}).then(response => {\n  // Log the response to the console for debugging\n  console.log('Response:', response);\n  // Verify the response status is 200 OK\n  expect(response.status).to.eq(200);\n  // Verify that the response body contains the expected user data\n  expect(response.body).to.eq(newUser.id);\n  // expect(response.body.username).to.eq(newUser.username);\n  // expect(response.body.firstName).to.eq(newUser.firstName);\n  // expect(response.body.lastName).to.eq(newUser.lastName);\n  // expect(response.body.email).to.eq(newUser.email);\n  // expect(response.body.password).to.eq(newUser.password);\n  // expect(response.body.phone).to.eq(newUser.phone);\n  // expect(response.body.userStatus).to.eq(newUser.userStatus);\n});",
              "err": {
                "message": "AssertionError: expected { Object (code, type, ...) } to equal 11",
                "estack": "AssertionError: expected { Object (code, type, ...) } to equal 11\n    at Context.eval (webpack://cypress_test/./cypress/e2e/4-api_testing/pet_store.cy.js:180:31)",
                "diff": "- { code: 200, type: 'unknown', message: '11' }\n+ 11\n"
              },
              "uuid": "0a01722c-3e31-4e7d-8a58-d7ee59a4a30d",
              "parentUUID": "9a297868-fef7-4ed8-b01f-709e9151d1bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve a user by username",
              "fullTitle": "Petstore User API Testing should retrieve a user by username",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToRetrieve = 'cypressuser';\ncy.request('GET', `https://petstore.swagger.io/v2/user/${usernameToRetrieve}`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.username).to.eq(usernameToRetrieve);\n  cy.log('Retrieved User:', response.body);\n});",
              "err": {},
              "uuid": "c8c40521-425a-47c7-88d7-820bab6f3aa4",
              "parentUUID": "9a297868-fef7-4ed8-b01f-709e9151d1bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user information",
              "fullTitle": "Petstore User API Testing should update user information",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToUpdate = 'cypressuser';\nconst updatedUserInfo = {\n  id: 11,\n  // Use the correct user ID you want to update\n  username: usernameToUpdate,\n  firstName: 'UpdatedCypress',\n  lastName: 'UpdatedUser',\n  email: 'updatedcypressuser@example.com',\n  password: 'updatedcypresspassword',\n  phone: '9876543210',\n  userStatus: 2\n};\ncy.request({\n  method: 'PUT',\n  url: `https://petstore.swagger.io/v2/user/${usernameToUpdate}`,\n  body: updatedUserInfo\n}).then(response => {\n  expect(response.status).to.eq(200);\n  // expect(response.body.id).to.eq(updatedUserInfo.id);\n  // expect(response.body.username).to.eq(updatedUserInfo.username);\n  // expect(response.body.firstName).to.eq(updatedUserInfo.firstName);\n  // expect(response.body.lastName).to.eq(updatedUserInfo.lastName);\n  // expect(response.body.email).to.eq(updatedUserInfo.email);\n  // expect(response.body.phone).to.eq(updatedUserInfo.phone);\n  // expect(response.body.userStatus).to.eq(updatedUserInfo.userStatus);\n  cy.log('User Information Updated:', response.body);\n});",
              "err": {},
              "uuid": "8be717c7-6f3c-4e2c-9bdb-f106b0527553",
              "parentUUID": "9a297868-fef7-4ed8-b01f-709e9151d1bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a user by username",
              "fullTitle": "Petstore User API Testing should delete a user by username",
              "timedOut": null,
              "duration": 872,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToDelete = 'cypressuser';\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/user/${usernameToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`User with username ${usernameToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "6c3b1cb0-5857-41c6-871d-aeb14b1ce198",
              "parentUUID": "9a297868-fef7-4ed8-b01f-709e9151d1bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8c40521-425a-47c7-88d7-820bab6f3aa4",
            "8be717c7-6f3c-4e2c-9bdb-f106b0527553",
            "6c3b1cb0-5857-41c6-871d-aeb14b1ce198"
          ],
          "failures": [
            "0a01722c-3e31-4e7d-8a58-d7ee59a4a30d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1842,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [
        "6deeb81a-5cd7-4e7e-820b-3407fe8ececc"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 1395,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/mocha"
      },
      "version": "6.2.0"
    }
  }
}