{
  "stats": {
    "suites": 3,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-19T12:32:14.107Z",
    "end": "2023-11-19T12:32:19.306Z",
    "duration": 5199,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "521def0b-192b-4ec4-a9aa-2c6a11a5f2e4",
      "title": "",
      "fullFile": "cypress/e2e/4-api_testing/pet_store.cy.js",
      "file": "cypress/e2e/4-api_testing/pet_store.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a10674c-b1b2-482f-8f03-bac993901f0d",
          "title": "Petstore API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should retrieve a list of pets",
              "fullTitle": "Petstore API Testing should retrieve a list of pets",
              "timedOut": null,
              "duration": 2152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://petstore.swagger.io/v2/pet/findByStatus?status=available').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array').and.not.be.empty;\n  cy.log('List of Available Pets:', response.body);\n});",
              "err": {},
              "uuid": "2a3a3adf-8607-4788-a776-862c2f1555c1",
              "parentUUID": "5a10674c-b1b2-482f-8f03-bac993901f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a new pet",
              "fullTitle": "Petstore API Testing should add a new pet",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPet = {\n  id: 12345,\n  name: 'CypressPet',\n  category: {\n    id: 1,\n    name: 'Dogs'\n  },\n  photoUrls: ['https://example.com/pet.jpg'],\n  tags: [{\n    id: 1,\n    name: 'tag1'\n  }],\n  status: 'available'\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/pet',\n  body: newPet\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(newPet.id);\n  expect(response.body.name).to.eq(newPet.name);\n  cy.log('New Pet Added:', response.body);\n});",
              "err": {},
              "uuid": "33db67ec-b663-4220-b210-86aef9961267",
              "parentUUID": "5a10674c-b1b2-482f-8f03-bac993901f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update a pet's information",
              "fullTitle": "Petstore API Testing should update a pet's information",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const petIdToUpdate = 12345;\nconst updatedPetInfo = {\n  id: petIdToUpdate,\n  name: 'UpdatedCypressPet',\n  status: 'sold'\n};\ncy.request({\n  method: 'PUT',\n  url: `https://petstore.swagger.io/v2/pet`,\n  body: updatedPetInfo\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(updatedPetInfo.id);\n  expect(response.body.name).to.eq(updatedPetInfo.name);\n  expect(response.body.status).to.eq(updatedPetInfo.status);\n  cy.log('Pet Information Updated:', response.body);\n});",
              "err": {},
              "uuid": "a4616a29-921e-4d69-827f-5a3822475487",
              "parentUUID": "5a10674c-b1b2-482f-8f03-bac993901f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a pet",
              "fullTitle": "Petstore API Testing should delete a pet",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const petIdToDelete = 12345;\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/pet/${petIdToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`Pet with ID ${petIdToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "f45eb67a-1a09-426d-ab92-d7908b38e22f",
              "parentUUID": "5a10674c-b1b2-482f-8f03-bac993901f0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a3a3adf-8607-4788-a776-862c2f1555c1",
            "33db67ec-b663-4220-b210-86aef9961267",
            "a4616a29-921e-4d69-827f-5a3822475487",
            "f45eb67a-1a09-426d-ab92-d7908b38e22f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6db54e46-d35c-4028-a83c-4a75c9324bab",
          "title": "Petstore Store API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should place a new order",
              "fullTitle": "Petstore Store API Testing should place a new order",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newOrder = {\n  id: 1,\n  petId: 12345,\n  // Assuming pet with ID 12345 exists\n  quantity: 1,\n  shipDate: '2023-12-01T12:00:00.000Z',\n  status: 'placed',\n  complete: true\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/store/order',\n  body: newOrder\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(newOrder.id);\n  expect(response.body.petId).to.eq(newOrder.petId);\n  expect(response.body.quantity).to.eq(newOrder.quantity);\n  expect(response.body.status).to.eq(newOrder.status);\n  expect(response.body.complete).to.eq(newOrder.complete);\n  cy.log('New Order Placed:', response.body);\n});",
              "err": {},
              "uuid": "e34a58da-4f4e-47f1-bb9f-a6238b175f44",
              "parentUUID": "6db54e46-d35c-4028-a83c-4a75c9324bab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve an order by ID",
              "fullTitle": "Petstore Store API Testing should retrieve an order by ID",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orderIdToRetrieve = 1;\ncy.request('GET', `https://petstore.swagger.io/v2/store/order/${orderIdToRetrieve}`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.id).to.eq(orderIdToRetrieve);\n  cy.log('Retrieved Order:', response.body);\n});",
              "err": {},
              "uuid": "49688983-777d-41f6-8efe-0e0b3184c6c4",
              "parentUUID": "6db54e46-d35c-4028-a83c-4a75c9324bab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete an order by ID",
              "fullTitle": "Petstore Store API Testing should delete an order by ID",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const orderIdToDelete = 1;\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/store/order/${orderIdToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`Order with ID ${orderIdToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "305ba672-116f-41f3-ba36-21d39f16b408",
              "parentUUID": "6db54e46-d35c-4028-a83c-4a75c9324bab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e34a58da-4f4e-47f1-bb9f-a6238b175f44",
            "49688983-777d-41f6-8efe-0e0b3184c6c4",
            "305ba672-116f-41f3-ba36-21d39f16b408"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 867,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3bbfe796-b537-4261-96ad-e16c64a600ac",
          "title": "Petstore User API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new user",
              "fullTitle": "Petstore User API Testing should create a new user",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  id: 11,\n  username: 'cypressuser',\n  firstName: 'Cypress',\n  lastName: 'User',\n  email: 'cypressuser@example.com',\n  password: 'cypresspassword',\n  phone: '1234567890',\n  userStatus: 1\n};\ncy.request({\n  method: 'POST',\n  url: 'https://petstore.swagger.io/v2/user',\n  body: newUser\n}).then(response => {\n  // Log the response to the console for debugging\n  console.log('Response:', response);\n  // Verify the response status is 200 OK\n  expect(response.status).to.eq(200);\n  // Verify that the response body contains the expected user data\n  // expect(response.body.id).to.eq(newUser.id);\n  // expect(response.body.username).to.eq(newUser.username);\n  // expect(response.body.firstName).to.eq(newUser.firstName);\n  // expect(response.body.lastName).to.eq(newUser.lastName);\n  // expect(response.body.email).to.eq(newUser.email);\n  // expect(response.body.password).to.eq(newUser.password);\n  // expect(response.body.phone).to.eq(newUser.phone);\n  // expect(response.body.userStatus).to.eq(newUser.userStatus);\n});",
              "err": {},
              "uuid": "3930fc97-8e6e-4a55-8980-6db9fb867ff2",
              "parentUUID": "3bbfe796-b537-4261-96ad-e16c64a600ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve a user by username",
              "fullTitle": "Petstore User API Testing should retrieve a user by username",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToRetrieve = 'cypressuser';\ncy.request('GET', `https://petstore.swagger.io/v2/user/${usernameToRetrieve}`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.username).to.eq(usernameToRetrieve);\n  cy.log('Retrieved User:', response.body);\n});",
              "err": {},
              "uuid": "dc196c34-b79c-4378-bf58-133c9564d2f2",
              "parentUUID": "3bbfe796-b537-4261-96ad-e16c64a600ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user information",
              "fullTitle": "Petstore User API Testing should update user information",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToUpdate = 'cypressuser';\nconst updatedUserInfo = {\n  id: 11,\n  // Use the correct user ID you want to update\n  username: usernameToUpdate,\n  firstName: 'UpdatedCypress',\n  lastName: 'UpdatedUser',\n  email: 'updatedcypressuser@example.com',\n  password: 'updatedcypresspassword',\n  phone: '9876543210',\n  userStatus: 2\n};\ncy.request({\n  method: 'PUT',\n  url: `https://petstore.swagger.io/v2/user/${usernameToUpdate}`,\n  body: updatedUserInfo\n}).then(response => {\n  expect(response.status).to.eq(200);\n  // expect(response.body.id).to.eq(updatedUserInfo.id);\n  // expect(response.body.username).to.eq(updatedUserInfo.username);\n  // expect(response.body.firstName).to.eq(updatedUserInfo.firstName);\n  // expect(response.body.lastName).to.eq(updatedUserInfo.lastName);\n  // expect(response.body.email).to.eq(updatedUserInfo.email);\n  // expect(response.body.phone).to.eq(updatedUserInfo.phone);\n  // expect(response.body.userStatus).to.eq(updatedUserInfo.userStatus);\n  cy.log('User Information Updated:', response.body);\n});",
              "err": {},
              "uuid": "0fd79e90-d0e4-437c-b9ab-b0270cc6a342",
              "parentUUID": "3bbfe796-b537-4261-96ad-e16c64a600ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete a user by username",
              "fullTitle": "Petstore User API Testing should delete a user by username",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usernameToDelete = 'cypressuser';\ncy.request({\n  method: 'DELETE',\n  url: `https://petstore.swagger.io/v2/user/${usernameToDelete}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(`User with username ${usernameToDelete} Deleted`);\n});",
              "err": {},
              "uuid": "5c3f82f9-2de3-42a6-b8e7-2bc0cd02df6d",
              "parentUUID": "3bbfe796-b537-4261-96ad-e16c64a600ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3930fc97-8e6e-4a55-8980-6db9fb867ff2",
            "dc196c34-b79c-4378-bf58-133c9564d2f2",
            "0fd79e90-d0e4-437c-b9ab-b0270cc6a342",
            "5c3f82f9-2de3-42a6-b8e7-2bc0cd02df6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/mocha"
      },
      "version": "6.2.0"
    }
  }
}